package com.mycompany.week8labactivity2;

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Sound Room
 */
public class EndScreen extends javax.swing.JFrame {

    /**
     * Creates new form EndScreen
     */
    //this takes in a name and a list of questions to count them all up and save the results to a text file
    static String playerName;
    static ArrayList<Question> Questions = new ArrayList<Question>();

    public EndScreen(String name, ArrayList<Question> qList) throws IOException {
        initComponents();

        this.playerName = name;
        this.Questions = qList;

        this.setVisible(true);

        LabelEndName.setText(name.toUpperCase());

        setTitle("Results");
        setLocationRelativeTo(null);

        //important code goes here - counting questions gotten right, and saving the results to a text file (ie name: score, if empty name put NULL or N/A: score)
        int correctQuestions = 0;

        //loop through the list of questions and check if the right answer was selected, if it is, increment the variable
        for (Question q : Questions) {

            //we go through each option and check it against the right answer
            if (q.getOptionSelected() == 1) {

                //if the option selected is the right option...
                if (q.getOption1().equalsIgnoreCase(q.getCorrectAnswer())) {

                    correctQuestions += 1;

                }

            } else if (q.getOptionSelected() == 2) {

                //if the option selected is the right option...
                if (q.getOption2().equalsIgnoreCase(q.getCorrectAnswer())) {

                    correctQuestions += 1;

                }

            } else if (q.getOptionSelected() == 3) {

                //if the option selected is the right option...
                if (q.getOption3().equalsIgnoreCase(q.getCorrectAnswer())) {

                    correctQuestions += 1;

                }

            } else if (q.getOptionSelected() == 4) {

                //if the option selected is the right option...
                if (q.getOption4().equalsIgnoreCase(q.getCorrectAnswer())) {

                    correctQuestions += 1;

                }

            }

        }

        //set the label and progress bar to match
        LabelScore.setText("Your score: " + correctQuestions + "/" + Questions.size());
        ProgressBarScore.setMinimum(0);
        ProgressBarScore.setMaximum(100);
        ProgressBarScore.setValue((int) (((double) correctQuestions / (double) (Questions.size())) * 100));

        //save the score to the text file
        try (
            PrintWriter out = new PrintWriter(new FileWriter("scores.txt", true))) {
            out.print(name.toUpperCase() + ": " + correctQuestions + "/" + Questions.size() + "\n");
            out.close();
            
        } catch (IOException e) {
            System.out.println("Error - File not found");

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ProgressBarScore = new javax.swing.JProgressBar();
        LabelScore = new javax.swing.JLabel();
        LabelEndName = new javax.swing.JLabel();
        ButtonExit = new javax.swing.JButton();
        ButtonInfo = new javax.swing.JButton();
        ButtonStats = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LabelScore.setText("Your Score: ");

        LabelEndName.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        LabelEndName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelEndName.setText("Name");

        ButtonExit.setText("Exit");
        ButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonExitActionPerformed(evt);
            }
        });

        ButtonInfo.setText("Info");
        ButtonInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonInfoActionPerformed(evt);
            }
        });

        ButtonStats.setText("Stats");
        ButtonStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonStatsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ProgressBarScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabelScore, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelEndName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(137, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(ButtonStats)
                .addGap(54, 54, 54)
                .addComponent(ButtonInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ButtonExit)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(LabelEndName)
                .addGap(50, 50, 50)
                .addComponent(LabelScore)
                .addGap(18, 18, 18)
                .addComponent(ProgressBarScore, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonExit)
                    .addComponent(ButtonInfo)
                    .addComponent(ButtonStats))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonExitActionPerformed
        this.dispose();

    }//GEN-LAST:event_ButtonExitActionPerformed

    private void ButtonInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonInfoActionPerformed
        Info infoPageRun = new Info(Questions);

    }//GEN-LAST:event_ButtonInfoActionPerformed

    private void ButtonStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonStatsActionPerformed
        Stats statsPageRun = new Stats();

    }//GEN-LAST:event_ButtonStatsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EndScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EndScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EndScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EndScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new EndScreen(playerName, Questions).setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(EndScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonExit;
    private javax.swing.JButton ButtonInfo;
    private javax.swing.JButton ButtonStats;
    private javax.swing.JLabel LabelEndName;
    private javax.swing.JLabel LabelScore;
    private javax.swing.JProgressBar ProgressBarScore;
    // End of variables declaration//GEN-END:variables
}
